version: '3.8'

services:
  mongo:
    image: mongo:latest
    pull_policy: never
    container_name: mongo-access
    restart: always
    environment:
      MONGO_INITDB_DATABASE: access
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_NON_ROOT_USERNAME: ianode-access
      MONGO_NON_ROOT_PASSWORD: password
    networks:
      - auth
    volumes:
      - ../init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'echo ''db.runCommand("ping").ok'' | mongosh localhost:27017/test --quiet',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  cognito-local:
    image: jagregory/cognito-local:latest
    restart: always
    container_name: cognito-local
    environment:
      - AWS_REGION=eu-west-1
      - AWS_DEFAULT_REGION=eu-west-1
      - AWS_ACCESS_KEY_ID=AKIAR3HUOMPNUUILXP6D
      - AWS_SECRET_ACCESS_KEY=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

    networks:
      - auth
    volumes:
      - /Users/conailloneill/NDTProjRepos/National-Digital-Twin/ianode-access/cognito-local:/app2
      - /Users/conailloneill/.aws:/root/.aws
    entrypoint: [ "/bin/sh", "-c", "
          apk add --no-cache aws-cli &&
          echo 'Waiting for Cognito Local to start...' &&
          while ! nc -z 127.0.0.1 9229; do sleep 5; done &&
          echo 'Cognito Local is up. Running setup scripts...' &&
          sh /app2/config_cognito.sh &&
          tail -f /dev/null" ]

    ports:
      - "9229:9229"

  #    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          'curl -f http://localhost:9229',
#        ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#      start_period: 40s

  access-api:
    image: ianode-access:latest
    pull_policy: never
    container_name: access-api-ianode
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
      cognito-local:
        condition: service_started
    networks:
      - auth
    ports:
      - 8091:8091
    environment:
      - OPENID_PROVIDER_URL=development
      - DEPLOYED_DOMAIN=http://localhost:3000
      - MONGO_URL=mongo:27017
      - MONGO_PROTOCOL=mongodb
      - MONGO_COLLECTION=access
      - MONGO_USER=ianode-access
      - MONGO_PWD=password
      - SCIM_ENABLED=true
      - GROUPS_KEY=cognito:groups
      - DEBUG="true"
      - PORT=8091
    command: ["/app/wait-for.sh", "mongo:27017", "--", "node", "dist/index.js"]

  secure-agent-graph-container:
    image: secure-agent-graph:0.82.18-SNAPSHOT
    container_name: secure-agent-graph-container
    networks:
      - auth
    ports:
      - "3030:3030"
    environment:
      - JAVA_OPTIONS=-Xmx2048m -Xms2048m
      - JWKS_URL=http://cognito-local:9229/.well-known/jwks.json
      - USER_ATTRIBUTES_URL=http://localhost:8091
    volumes:
      - /Users/conailloneill/NDTProjRepos/National-Digital-Twin/secure-agent-graph/sag-docker/docker-run.sh:/app/docker-run.sh
      - type: bind
        source: ../sag-docker/mnt/logs
        target: /fuseki/logs
      - type: bind
        source: ../sag-docker/mnt/databases
        target: /fuseki/databases
      - type: bind
        source: /Users/conailloneill/NDTProjRepos/National-Digital-Twin/secure-agent-graph/sag-docker/mnt/config
        target: /fuseki/config
    command: "--config /fuseki/config/config-abac-local.ttl"

networks:
  auth:
    name: auth

volumes:
  mongo-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
