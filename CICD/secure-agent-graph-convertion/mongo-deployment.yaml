apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose-github.yaml convert
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose-github.yaml convert
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: mongo
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_DATABASE
              value: access
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: password
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_NON_ROOT_PASSWORD
              value: password
            - name: MONGO_NON_ROOT_USERNAME
              value: ianode-access
          image: mongo-amd:latest
          livenessProbe:
            exec:
              command:
                - echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
            failureThreshold: 5
            initialDelaySeconds: 40
            periodSeconds: 30
            timeoutSeconds: 10
          name: mongo-access
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init-mongo.sh
              name: mongo-claim0
              readOnly: true
            - mountPath: /data/db
              name: mongo-data
      restartPolicy: Always
      volumes:
        - name: mongo-claim0
          persistentVolumeClaim:
            claimName: mongo-claim0
            readOnly: true
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data
