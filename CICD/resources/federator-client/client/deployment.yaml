apiVersion: apps/v1
kind: Deployment

metadata:
  name: federator-client
  namespace: input.a.namespace
 
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: federator-client
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: federator-client
    spec:
      serviceAccountName: federator-client
      containers:
        - name: federator-client
          image: input.image
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: federator-client-config
          resources:
            requests:
              memory: 1024Mi
              cpu: 500m
            limits:
              memory: 1024Mi
              cpu: 500m
          # readinessProbe:
          #   httpGet:
          #     path: /access/health
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 2
          # livenessProbe:
          #   httpGet:
          #     path: /access/health
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 2
          volumeMounts:
            - name: federator-client-config-volume
              mountPath: /config
      volumes:
        - name: federator-client-config-volume
          projected:
            sources: 
              - configMap:
                  name: federator-client-properties
              - configMap:
                  name: federator-client-connection-configuration
